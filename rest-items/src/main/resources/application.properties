quarkus.application.name=rest-items
%dev.quarkus.http.port=7806

# REST Client
quarkus.rest-client.plant-types-rest-client.url=http://localhost:7807
quarkus.rest-client.plant-types-rest-client.scope=jakarta.inject.Singleton


# DB connectivity PostGreSQL
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.username=user
%dev.quarkus.datasource.password=password
%dev.quarkus.hibernate-orm.log.sql=false

# Kafka configuration
#mp.messaging.incoming.SAGA_ITEM_ALLOCATION_EVENT.failure-strategy=ignore
%dev.quarkus.kafka.devservices.shared=true
%test.quarkus.kafka.devservices.shared=false
%test.quarkus.kafka.devservices.enabled=false

# -- Build container & push to docker
quarkus.container-image.group=garden-app
quarkus.container-image.name=${quarkus.application.name}
quarkus.container-image.tag=1.0
quarkus.container-image.username=baptiste164
#quarkus.kubernetes.image-pull-policy=never
quarkus.container-image.build=true


# Kubernetes
%kubernetes.quarkus.config.profile.parent=prod
%kubernetes.quarkus.kubernetes.deployment-target=kubernetes

quarkus.kubernetes.name=items-rest
#quarkus.kubernetes.part-of=garden-app
quarkus.kubernetes.env.secrets=${quarkus.application.name}-config-creds
quarkus.kubernetes.env.configmaps=${quarkus.application.name}-config
quarkus.kubernetes.labels.app=${quarkus.application.name}
#quarkus.kubernetes.labels.application=${quarkus.kubernetes.part-of}
quarkus.kubernetes.labels.system=quarkus-robotic-garden

#quarkus.kubernetes.service-type=NodePort
quarkus.kubernetes.ingress.expose=true


# Minikube
%minikube.quarkus.config.profile.parent=prod
%minikube.quarkus.kubernetes.deployment-target=minikube